create table t1
( 
pk1 int not null,
pk2 int not null,
key1 int not null,
key2 int not null,
key (key1),
key (key2),
primary key (pk1, pk2)
)engine=Innodb;
set optimizer_trace="enabled=on,one_line=off";
set @tmp_index_merge_ror_cpk=@@optimizer_switch;
set optimizer_switch='extended_keys=off';
explain select * from t1 where pk1 != 0  and key1 = 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	index_merge	PRIMARY,key1	key1,PRIMARY	4,4	NULL	1	Using intersect(key1,PRIMARY); Using where
select * from information_schema.OPTIMIZER_TRACE;
QUERY	TRACE	MISSING_BYTES_BEYOND_MAX_MEM_SIZE	INSUFFICIENT_PRIVILEGES
explain select * from t1 where pk1 != 0  and key1 = 1	{
  "steps": [
    {
      "join_preparation": {
        "select_id": 1,
        "steps": [
          {
            "expanded_query": "select `t1`.`pk1` AS `pk1`,`t1`.`pk2` AS `pk2`,`t1`.`key1` AS `key1`,`t1`.`key2` AS `key2` from `t1` where `t1`.`pk1` <> 0 and `t1`.`key1` = 1"
          }
        ]
      }
    },
    {
      "join_optimization": {
        "select_id": 1,
        "steps": [
          {
            "condition_processing": {
              "condition": "WHERE",
              "original_condition": "t1.pk1 <> 0 and t1.key1 = 1",
              "steps": [
                {
                  "transformation": "equality_propagation",
                  "resulting_condition": "t1.pk1 <> 0 and multiple equal(1, t1.key1)"
                },
                {
                  "transformation": "constant_propagation",
                  "resulting_condition": "t1.pk1 <> 0 and multiple equal(1, t1.key1)"
                },
                {
                  "transformation": "trivial_condition_removal",
                  "resulting_condition": "t1.pk1 <> 0 and multiple equal(1, t1.key1)"
                }
              ]
            }
          },
          {
            "table_dependencies": [
              {
                "table": "t1",
                "row_may_be_null": false,
                "map_bit": 0,
                "depends_on_map_bits": []
              }
            ]
          },
          {
            "ref_optimizer_key_uses": [
              {
                "table": "t1",
                "field": "key1",
                "equals": "1",
                "null_rejecting": false
              }
            ]
          },
          "rows_estimation": [
            {
              "rows_estimation": [
                {
                  "table": "t1",
                  "range_analysis": {
                    "table_scan": {
                      "rows": 1102,
                      "cost": 226
                    },
                    "potential_range_indexes": [
                      {
                        "index": "PRIMARY",
                        "usable": true,
                        "key_parts": ["pk1", "pk2"]
                      },
                      {
                        "index": "key1",
                        "usable": true,
                        "key_parts": ["key1"]
                      },
                      {
                        "index": "key2",
                        "usable": false,
                        "cause": "not_applicable"
                      }
                    ],
                    "setup_range_conditions": [],
                    "group_index_range": {
                      "chosen": false,
                      "cause": "no_group_by_or_distinct"
                    },
                    "analyzing_range_alternatives": {
                      "range_scan_alternatives": [
                        {
                          "index": "PRIMARY",
                          "ranges": ["pk1 < 0", "0 < pk1"],
                          "rowid_ordered": true,
                          "using_mrr": false,
                          "index_only": false,
                          "rows": 1001,
                          "cost": 203.59,
                          "chosen": true
                        },
                        {
                          "index": "key1",
                          "ranges": ["1 <= key1 <= 1"],
                          "rowid_ordered": true,
                          "using_mrr": false,
                          "index_only": false,
                          "rows": 1,
                          "cost": 2.21,
                          "chosen": true
                        }
                      ],
                      "analyzing_roworder_intersect": {
                        "intersecting_indexes": [
                          {
                            "index": "key1",
                            "index_scan_cost": 1,
                            "cumulateed_index_scan_cost": 1,
                            "disk_sweep_cost": 1.0014,
                            "cumulative_total_cost": 2.0014,
                            "usable": true,
                            "matching_rows_now": 1,
                            "intersect_covering_with_this_index": false,
                            "chosen": true
                          }
                        ],
                        "clustered_pk": {
                          "index_scan_cost": 0.002,
                          "cumulateed_index_scan_cost": 1.002,
                          "disk_sweep_cost": 0,
                          "clustered_pk_scan_added_to_intersect": true,
                          "cumulated_cost": 1.002
                        },
                        "rows": 1,
                        "cost": 1.002,
                        "covering": false,
                        "chosen": true
                      },
                      "analyzing_index_merge_union": []
                    },
                    "chosen_range_access_summary": {
                      "range_access_plan": {
                        "type": "index_roworder_intersect",
                        "rows": 1,
                        "cost": 1.002,
                        "covering": false,
                        "clustered_pk_scan": true,
                        "intersect_of": [
                          {
                            "type": "range_scan",
                            "index": "key1",
                            "rows": 1,
                            "ranges": ["1 <= key1 <= 1"]
                          }
                        ]
                      },
                      "rows_for_plan": 1,
                      "cost_for_plan": 1.002,
                      "chosen": true
                    }
                  }
                }
              ]
            }
          ]
        ]
      }
    },
    {
      "join_execution": {
        "select_id": 1,
        "steps": []
      }
    }
  ]
}	0	0
drop table t1;
